!function(t){function e(i){if(n[i])return n[i].exports;var r=n[i]={exports:{},id:i,loaded:!1};return t[i].call(r.exports,r,r.exports,e),r.loaded=!0,r.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}([function(t,exports,e){(function($){"use strict";e(2);var t,n=function(){function t(t,e){var n=this;this.incomplete="[ ]",this.complete="[x]",this.incompletePattern=RegExp(this.escapePattern(this.incomplete)),this.completePattern=RegExp(this.escapePattern(this.complete)),this.itemPattern=RegExp("^(?:\\s*[-+*]|(?:\\d+\\.))?\\s*("+this.escapePattern(this.complete)+"|"+this.escapePattern(this.incomplete)+")(?=\\s)"),this.codeFencesPattern=/^`{3}(?:\s*\w+)?[\S\s].*[\S\s]^`{3}$/gm,this.itemsInParasPattern=RegExp("^("+this.escapePattern(this.complete)+"|"+this.escapePattern(this.incomplete)+").+$","g"),this.$element=t,this.$markdownContainer=this.$element.find(e.markdownContainer),this.$renderedContainer=this.$element.find(e.renderedContainer),this.onUpdate=function(t){var i=n.updateTaskList($(t.target));i&&e.onUpdate(i)},this.$renderedContainer.on("change",".task-list-item-checkbox",this.onUpdate),this.enable()}return t.prototype.destroy=function(){this.$renderedContainer.off("change",".task-list-item-checkbox",this.onUpdate)},t.prototype.enable=function(){this.$renderedContainer.find(".task-list-item").addClass("enabled").find(".task-list-item-checkbox").attr("disabled",null),this.$element.trigger("tasklist:enabled")},t.prototype.disable=function(){this.$renderedContainer.find(".task-list-item").removeClass("enabled").find(".task-list-item-checkbox").attr("disabled","disabled"),this.$element.trigger("tasklist:disabled")},t.prototype.updateTaskListItem=function(t,e,n){for(var i=t.replace(/\r/g,"").replace(this.codeFencesPattern,"").replace(this.itemsInParasPattern,"").split("\n"),r=0,s=[],a=0,o=t.split("\n");a<o.length;a++){var c=o[a];i.indexOf(c)>=0&&this.itemPattern.test(c)&&(r++,r===e&&(c=n?c.replace(this.incompletePattern,this.complete):c.replace(this.completePattern,this.incomplete))),s.push(c)}return s.join("\n")},t.prototype.updateTaskList=function(t){var e=1+this.$renderedContainer.find(".task-list-item-checkbox").index(t),n=t.prop("checked"),i=$.Event("tasklist:change");if(this.$element.trigger(i,[e,n]),!i.isDefaultPrevented()){var r=this.updateTaskListItem(this.$markdownContainer.val(),e,n);return this.$markdownContainer.val(r),this.$markdownContainer.trigger("change"),this.$markdownContainer.trigger("tasklist:changed",[e,n]),r}},t.prototype.escapePattern=function(t){return t.replace(/([\[\]])/g,"\\$1").replace(/\s/,"\\s").replace("x","[xX]")},t}();!function(t){$.fn.gfmTaskList=function(t){var e=$.data(this,n.name);if("string"==typeof t){if(!e)throw new Error("Must construct gfmTaskList before calling methods on it.");return e[t](),this}var i;if("object"!=typeof t)throw new Error("Must pass an object to $.fn.gfmTaskList().");i=t;var r=["renderedContainer","markdownContainer"],s=Object.keys(i);return r.forEach(function(t){if(s.indexOf(t)===-1)throw new Error("Missing key '"+t+"'")}),t=void 0,e&&e.destroy(),e=$.data(this,n.name,new n(this,i)),this}}(t||(t={}))}).call(exports,e(1))},function(t,exports){t.exports=jQuery},function(t,exports){}]);
//# sourceMappingURL=gfm-task-list.min.js.map
